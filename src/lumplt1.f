      SUBROUTINE LUMPLT1(FILE,NEW,KIN,FV,LHEL,LUM,
     %     NBN,BIN,LOGV,VMM,DLUM0,DLUMH,DLUMP,PERHVAR,
     %     TTL1,TTL2,TTL3,LM,ICOLOR,IRTN)
	USE FLCHTYP
      IMPLICIT NONE
      INTEGER FILE,NEW,KIN(2),LHEL(0:2),NBN,LOGV,LM,PERHVAR,
     %     ICOLOR,IRTN
      REAL*8 LUM(0:20),BIN(0:NBN),VMM(2),
     %   DLUM0(NBN),DLUMH(NBN,4),DLUMP(NBN,16)
      CHARACTER*(*) FV,TTL1,TTL2,TTL3
C
      INTEGER MBN
      PARAMETER (MBN=1000)
      INTEGER I,J,J1,J2,LOGHV(2),IRTN1,NC0(2,3),NC(3),IUNITX,
     %        IP00
      REAL*8 FF(MBN),VAL,FMIN,FMAX,XYMM(2,2),UNITX,DUMMY(1),BINW
C
      INTEGER MP,MF,NP,NF
      PARAMETER (MP=100,MF=100)
      CHARACTER*16 NAMP(MP),NAMF(MF)
	INTEGER IDLM
	TYPE(FLCHTYPE) XC,XC1
      CHARACTER*256 TEXT,TTL(2,3)
      CHARACTER*1 SEP/';'/
      CHARACTER*3 LUNITX(0:4)/'eV ','keV','MeV','GeV','TeV'/
      REAL*8 XYW(2,2)/0.0,12.0,0.0,10.0/,XL,XH,YL,YH
      INCLUDE 'include/ctrlcm3.h'
      INCLUDE 'include/ctrlcm.h'
      REAL*8 RSVP(MRSVP4)
C
	IDLM=0
      IF(NBN.GT.MBN) GOTO 900
      DO 200 J=0,21
        RSVP(IPL0+J)=0D0
        IF(J.EQ.21) RSVP(IPL0+J)=1D0   !  for W
 200  CONTINUE
      CALL EVDEFP2(22,IDRSVP(IPL0),RSVP(IPL0))
      CALL EVCHKVAR(FV,MP,NP,NAMP,MF,NF,NAMF,XC1,IRTN1)
      IF(IRTN1.NE.0) GOTO 990
      IP00=MRSVP1+MRSVP2+MRSVP3+IPL0
      J1=1
      IF(LHEL(1).EQ.0) J1=5
      J2=20
      IF(LHEL(2).EQ.0) J2=4
      IF(NP.GE.1) THEN
        DO 240 J=1,NP
          DO 220 I=1,20
            IF(NAMP(J).EQ.RSVPAR(IP00+I)) THEN
              IF(I.LT.J1.OR.I.GT.J2) GOTO 910
            ENDIF
 220      CONTINUE
 240    CONTINUE
      ENDIF
      CALL EVCMPL(FV,IDLM,TEXT)
      IF(TEXT(1:60).NE.' ') GOTO 940
C
      FMAX=-1D60
      FMIN=1D60
      DO 300 I=1,NBN
        RSVP(IPL0+21)=0.5*(BIN(I-1)+BIN(I))
        RSVP(IPL0)=DLUM0(I)
        IF(PERHVAR.NE.0) THEN
          BINW=BIN(I)-BIN(I-1)
          RSVP(IPL0)=RSVP(IPL0)/BINW
        ENDIF
        IF(LHEL(1).GE.1) THEN
          DO 260 J=1,4
            RSVP(IPL0+J)=DLUMH(I,J)
            IF(PERHVAR.NE.0) RSVP(IPL0+J)=RSVP(IPL0+J)/BINW
 260      CONTINUE
        ENDIF
        IF(LHEL(2).GE.1) THEN
          DO 280 J=1,16
            RSVP(IPL0+4+J)=DLUMP(I,J)
            IF(PERHVAR.NE.0) RSVP(IPL0+4+J)=RSVP(IPL0+4+J)/BINW
 280      CONTINUE
        ENDIF
        CALL EVDEFP2(22,IDRSVP(IPL0),RSVP(IPL0))
        CALL EVLOAD(IDLM,XC,IRTN1)
        IF(IRTN1.NE.0.OR.XC%L.NE.1) GOTO 940
	  FF(I)=XC%X
        FMAX=MAX(FMAX,FF(I))
        if(ff(i).gt.0.) FMIN=MIN(FMIN,FF(I))
 300  CONTINUE
      IF(FMAX.EQ.0.AND.FMIN.EQ.0) GOTO 930
      if(logv.eq.0) then
         FMAX=MAX(FMAX,1.05*FMAX)
         FMIN=MIN(FMIN,FMIN/1.05)
      else
         FMAX=MAX(FMAX,1.5*FMAX)
         FMIN=MIN(FMIN,FMIN/1.5)
      endif
c      IF(FMIN.GT.0.AND.LOGV.NE.0) FMIN=0
      IF(FMAX.LT.0) FMAX=0
      IF(VMM(1).NE.UNDEF%X) FMIN=VMM(1)
      IF(VMM(2).NE.UNDEF%X) FMAX=VMM(2)
c      IF(LOGV.NE.0.AND.FMIN.LE.0) THEN
c        IF(FMAX.LE.0) GOTO 920
c        FMIN=FMAX/1D3
c      ENDIF
      XYMM(1,1)=BIN(0)
      XYMM(2,1)=BIN(NBN)
      XYMM(1,2)=FMIN
      XYMM(2,2)=FMAX
      LOGHV(1)=0
      LOGHV(2)=LOGV
      IUNITX=MAX(0,MIN(4,INT(LOG10(BIN(NBN)-BIN(0))/3D0+100)-100))
      UNITX=10D0**(3*IUNITX)
      XYMM(1,1)=XYMM(1,1)/UNITX
      XYMM(2,1)=XYMM(2,1)/UNITX
C
      CALL RDTTL(TTL1,2,TTL(1,1),NC0(1,1),SEP)
      CALL RDTTL(TTL2,2,TTL(1,2),NC0(1,2),SEP)
      CALL RDTTL(TTL3,2,TTL(1,3),NC0(1,3),SEP)
      DO 360 I=1,3
        NC(I)=NC0(1,I)
 360  CONTINUE
C
      XL=XYW(1,1)+1.5
      XH=XYW(2,1)-0.2
      YL=XYW(1,2)+1.5
      YH=XYW(2,2)-1.0
      print *, " lumplt1 point 001"
      CALL HIST(FILE,NEW,LM,ICOLOR,NBN,BIN,FF,0,DUMMY,XYW,XYMM,LOGHV,
     %   TTL,NC)
      WRITE(FILE,400) XH+0.2,YL,LUNITX(IUNITX)
 400  FORMAT(' TITLE',2F7.3,' SIZE 1.6 ',1H',A,1H')
      IRTN=0
      GOTO 1000
 900  IRTN=1000
      IF(MSGLVL.GE.0) WRITE(MSGFL,905)
 905  FORMAT(' (SUBR.LUMPLT) Too many bin number for PLOT LUMINOSITY')
      GOTO 1000
 910  IRTN=1001
      IF(MSGLVL.GE.0) WRITE(MSGFL,915)
 915  FORMAT(' (SUBR.LUMPLT) dL/dW undefined for relevant luminosity')
      GOTO 1000
 920  IRTN=1002
      IF(MSGLVL.GE.0) WRITE(MSGFL,925)
 925  FORMAT(' (SUBR.LUMPLT) Non-positive axis limit for log plot.')
      GOTO 1000
 930  IRTN=1003
      IF(MSGLVL.GE.0) WRITE(MSGFL,935)
 935  FORMAT(' (SUBR.LUMPLT) All bins are zero.')
      GOTO 1000
 940  IRTN=1004
	IF(MSGLVL.GE.0) WRITE(MSGFL,945)
 945  FORMAT(' (SUBR.LUMPLT) Invalid function for vertical axis.')
      GOTO 1000
 990  IRTN=1009
      GOTO 1000
1000  IF(IDLM.GE.1) CALL EVLMFREE(IDLM)
	RETURN
      END
