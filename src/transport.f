	SUBROUTINE TRANSPORT(IFIRST,LSPIN,
     %   BLNAME,LOSSMON0,IQ000,P000,M000,TXYS0,E1,E3,
     %   NP,LSEL,KIND,LOST,PNAME,TXYS,EP,SPIN,IRTN)
	USE BEAMLN
	IMPLICIT NONE
	INTEGER IFIRST,LSPIN,LOSSMON0,IQ000,IRTN
	CHARACTER(*) BLNAME
	REAL(8) P000,M000,TXYS0(0:3),E1(3),E3(3),APERT1(2)
C       3 lines to be eliminated when put into CAIN
	INTEGER NP,LSEL(NP),KIND(NP),LOST(NP)
	REAL(8) TXYS(0:3,NP),EP(0:3,NP),SPIN(3,NP)
	CHARACTER(*) PNAME(NP)
      INCLUDE 'include/ctrlcm.h'
	INCLUDE 'include/transpcm.h'
	INTEGER I,I1,I2,N,IRTN1
	REAL(8) SUM1,SUM3,SUM31
	CHARACTER(80) ERR
	CHARACTER(MAXMAGNAME+10) MAGNAM
	INTEGER NCMAGNAM
	SAVE MAGNAM,NCMAGNAM

      CALL CPUTIM('TRANS',1)
	IF(IFIRST.LE.0) GOTO 500
	LSPIN0=LSPIN
	IQ00=IQ000
	P00=P000
	M00=M000
	E00=SQRT(M000**2+P000**2)
	LOSSMON=LOSSMON0
	SSUM=0
	NSTEPTRANS=-1
	SUM1=0
	SUM3=0
	E123(1:3,1)=E1
	E123(1:3,3)=E3
	SUM3=E123(1,3)**2+E123(2,3)**2+E123(3,3)**2
	IF(SUM3.NE.0) THEN
	  SUM3=SQRT(SUM3)
	  E123(1:3,3)=E123(1:3,3)/SUM3
	  SUM31=E123(1,1)*E123(1,3)
     %       +E123(2,1)*E123(2,3)+E123(2,1)*E123(2,3)
	  E123(1:3,1)=E123(1:3,1)-SUM31*E123(1:3,3)
	  SUM1=E123(1,1)**2+E123(2,1)**2+E123(3,1)**2
	  IF(SUM1.NE.0) THEN
	    SUM1=SQRT(SUM1)
	    E123(1:3,1)=E123(1:3,1)/SUM1
	  ELSE
	    GOTO 910
	  ENDIF
	  DO I=1,3
	    I1=MOD(I,3)+1
	    I2=MOD(I1,3)+1
	    E123(I,2)=E123(I1,3)*E123(I2,1)-E123(I2,3)*E123(I1,1)
	  ENDDO
	ELSE
	  GOTO 910
	ENDIF
	IF(P00.EQ.0) GOTO 920
	TXYS1=TXYS0
	CALL STARTBL(BLNAME,IDBLTRANS,APERT1)
	IF(IDBLTRANS.LE.0) GOTO 900
	CALL MAGSET(IDBLTRANS,ERR)
	IF(ERR.NE.' ') GOTO 930
	CALL BLCOORD(0,SSUM,TXYS1,E123,LSPIN,
     %      NP,LSEL,KIND,LOST,PNAME,TXYS,EP,SPIN)
C   Asign particles with P3<0 in beamline coordinate as 'LOST'
	DO N=1,NP
	  IF(EP(3,N).LE.0) THEN
	    IF(LOSSMON.EQ.0) THEN
	      LOST(N)=1
	    ELSE
		    LOST(N)=2
	    ENDIF
	    CYCLE
	  ENDIF
	ENDDO
	CALL IFARRAY('$PrevMag',IDARRPREVMAG)
	IDARRPREVMAG=-IDARRPREVMAG
	CALL IFARRAY('$NextMag',IDARRNEXTMAG)
	IDARRNEXTMAG=-IDARRNEXTMAG

 500  NSTEPTRANS=NSTEPTRANS+1
C      Eliminate lost particles
C      This will cause a shift of particle ID 
C      But the array contents are correctly shifted including
C      LSEL = ISBIN
	CALL DELLOS
	
	IF(NSTEPTRANS.EQ.0) THEN
	  CALL EVARRCSET(IDARRPREVMAG,0,0,'(entr).0',ERR)
	ELSE
	  CALL EVARRCSET(IDARRPREVMAG,0,0,
     %      MAGNAM(1:NCMAGNAM),ERR)
	ENDIF
	CALL NEXTMAG(IDNEXTMAG,APERTNEXT)
	IF(IDNEXTMAG.GT.0) THEN
	  WRITE(MAGNAM,'(I12)') BL(IDBLTRANS)%MAGNID(NSTEPTRANS+1)
	  CALL SPCOFF(MAGNAM,3,NCMAGNAM)
	  MAGNAM=MAG(IDNEXTMAG)%NAME(1:MAG(IDNEXTMAG)%NC)//
     %       '.'//MAGNAM(1:NCMAGNAM)
	  NCMAGNAM=MAG(IDNEXTMAG)%NC+1+NCMAGNAM
	  CALL EVARRCSET(IDARRNEXTMAG,0,0,MAGNAM(1:NCMAGNAM),ERR)
	ELSE
	  CALL EVARRCSET(IDARRNEXTMAG,0,0,'(exit).0',ERR)
	ENDIF

      CALL EVDEFP('Sbl',SSUM,IRTN1)

      IF(MSGLVL.GE.2) WRITE(MSGFL,510) NSTEPTRANS
 510  FORMAT(' ++ TRANSPORT  start ',I5,'-th loop ++')
      IRTN=0
      GOTO 1000

900   IRTN=1000
	IF(MSGLVL.GE.0) WRITE(MSGFL,905) BLNAME
905   FORMAT(' (SUBR.TRANSPORT) Beamline "',A,'" does not exist.')
	GOTO 1000
910	IRTN=1001
	IF(MSGLVL.GE.0) WRITE(MSGFL,915) BLNAME
915	FORMAT(' (SUBR.TRANSPORT) E1/E3 for beamline "','" invalid.')
	GOTO 1000
920	IRTN=1002
	IF(MSGLVL.GE.0) WRITE(MSGFL,925)
925	FORMAT(' (SUBR.TRANSPORT) Reference momentum invalid.')
	GOTO 1000
930	IRTN=1003
	IF(MSGLVL.GE.0) WRITE(MSGFL,935) ERR
935	FORMAT(' (SUBR.TRANSPORT) ',A)
	GOTO 1000
1000  CALL CPUTIM('TRANS',2)
      RETURN
	END

	SUBROUTINE ENDTRANSP(NP,LSEL,KIND,LOST,PNAME,TXYS,EP,SPIN,IRTN)
C   IRTN=0  :  continues to the next element.
C        1  :  end of beamline reached.
	USE BEAMLN
	IMPLICIT NONE
	INTEGER IRTN
C       3 lines to be eliminated when put into CAIN
	INTEGER NP,LSEL(NP),KIND(NP),LOST(NP)
	REAL(8) TXYS(0:3,NP),EP(0:3,NP),SPIN(3,NP)
	CHARACTER(*) PNAME(NP)
	REAL(8) APERT1(2)
	INCLUDE 'include/transpcm.h'
	INTEGER JMAG

      CALL CPUTIM('ENDTRANS',1)
	JMAG=IDNEXTMAG
	APERT1=APERTNEXT

	IF(JMAG.NE.0) THEN
        CALL TRACKMAG(MAG(JMAG)%LENGTH%X,MAG(JMAG)%ANGLE,
     %    MAG(JMAG)%K1%X,MAG(JMAG)%TEDGE,MAG(JMAG)%ROTATE,
     %    APERT1,IQ00,P00,M00,E00,LOSSMON,LSPIN0,
     %    NP,LSEL,KIND,LOST,PNAME,TXYS,EP,SPIN,IRTN)
	  IF(IRTN.GE.100) RETURN
c       here revise txys1,e1,e3
	  CALL TRKBLGEO(MAG(JMAG)%LENGTH%X,MAG(JMAG)%ANGLE,
     %    MAG(JMAG)%ROTATE,SSUM,TXYS1(1),E123)
	  IRTN=0
	ELSE
	  NSTEPTRANS=-1
	  CALL BLCOORD(1,SSUM,TXYS1,E123,LSPIN0,
     %    NP,LSEL,KIND,LOST,PNAME,TXYS,EP,SPIN)
	  IRTN=1
	ENDIF
      CALL CPUTIM('ENDTRANS',2)
	RETURN
	END
